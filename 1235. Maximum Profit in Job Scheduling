class Solution(object):
    def jobScheduling(self, startTime, endTime, profit):
        def binarySearch(jobs, start):
            low = 0
            high = len(jobs) - 1
            while low <= high:
                mid = low + (high-low) // 2
                if jobs[mid][0] <= start:
                    low = mid + 1
                else:
                    high = mid - 1
            return high
        
        jobs = sorted(zip(startTime, endTime, profit), key=lambda v: v[1])
        
        dp = [(0, 0)]

        for start, end, profit in jobs:
            i = binarySearch(dp, start)
            if dp[i][1] + profit > dp[-1][1]:
                dp.append((end, dp[i][1] + profit))
        
        return dp[-1][1]
